
app.apiVersion=24


# See a lit of properties here
# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html

server.port=9000
server.shutdown=graceful

spring.flyway.enabled=false

# goes with server.shutdown
spring.lifecycle.timeout-per-shutdown-phase=20s

# static content and API all come from the same base
# can only use /api for api-only requests if the UI is served separately
# server.servlet.context-path=/api

# Handling of HTTP requests may take longer while any deferred initialisation occurs
# Failures that would normally occur at startup will now not occur until later
# So this can be true for dev and false for qa/perf/prod
spring.main.lazy-initialization=false

# see what spring boot is doing on startup
# logging.level.org.springframework.boot.autoconfigure=DEBUG

# see what spring security is doing
# logging.level.org.springframework.security=DEBUG

# Maximum amount of worker threads, default is 10
server.tomcat.threads.max=50
# Minimum amount of worker threads
server.tomcat.threads.min-spare=1 
# Maximum queue length for incoming connection requests when all possible request processing threads are in use
server.tomcat.accept-count=200

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.open-in-view=false

management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env,beans

# For setting the timeout of the session you can use the spring.session.timeout property.
# If that property is not set, the auto-configuration falls back to the value of server.servlet.session.timeout
# timeout is a timeout for inactivity (counts from last authenticated request)
# If a duration suffix is not specified, seconds are used.

spring.session.store-type=jdbc
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.jdbc.initialize-schema=never
spring.session.timeout=12h
