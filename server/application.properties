
app.apiVersion=2

server.port=9000
server.shutdown=graceful

# goes with server.shutdown
spring.lifecycle.timeout-per-shutdown-phase=20s

# static content and API all come from the same base
# can only use /api for api-only requests if the UI is served separately
# server.servlet.context-path=/api

# Handling of HTTP requests may take longer while any deferred initialisation occurs
# Failures that would normally occur at startup will now not occur until later
# So this can be true for dev and false for qa/perf/prod
spring.main.lazy-initialization = true

# see what spring boot is doing on startup
# logging.level.org.springframework.boot.autoconfigure=DEBUG

# Maximum amount of worker threads, default is 10
server.tomcat.max-threads=2
# Minimum amount of worker threads
server.tomcat.min-spare-threads=1 
# Maximum queue length for incoming connection requests when all possible request processing threads are in use
server.tomcat.accept-count=2

# The path to the keystore containing the certificate could be: classpath:app.dev.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store=app.dev.p12
server.ssl.key-store-password=password
server.ssl.key-alias=app

# need "autosave conservative" config, otherwise pg driver has caching issues with blue-green deployment
# (org.postgresql.util.PSQLException: ERROR: cached plan must not change result type)
spring.datasource.url= jdbc:postgresql://localhost:5555/app?autosave=conservative
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.open-in-view=false

management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=env,beans