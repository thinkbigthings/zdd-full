buildscript {
    dependencies {
        classpath 'org.postgresql:postgresql:42.2.18'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'org.flywaydb.flyway' version '7.2.1'
}

dependencies {
    implementation 'org.postgresql:postgresql:42.2.18'
    implementation 'org.flywaydb:flyway-core:7.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.4.0'
}

task dockerStop(type:Exec) {
    executable 'docker'
    args "container", "stop", "pg-12-docker"
}

task dockerStart(type:Exec) {
    executable 'docker'
    args "run", "--rm", "--name", "pg-12-docker", "-e", "POSTGRES_PASSWORD=postgres", "-d", "-p", "5555:5432", "postgres:12"
}

task dockerInit(type:Exec) {
    executable 'docker'
    args "exec", "pg-12-docker", "psql", "-U", "postgres", "--command=CREATE DATABASE app OWNER postgres ENCODING 'UTF8';"
    // docker exec -it pg-12-docker psql -U postgres --command="CREATE DATABASE app OWNER postgres ENCODING 'UTF8';"
}

//flyway {
//
//    // get properties for application and flyway plugin from the same place
//    def props = new Properties()
//    file("application.properties").withInputStream { props.load(it) }
//
//    url = props.getProperty("spring.datasource.url") // 'jdbc:postgresql://localhost:5555/app'
//    user = props.getProperty("spring.datasource.username") //'postgres'
//    password = props.getProperty("spring.datasource.password") //'postgres'
//    schemas = ['public']
//}
